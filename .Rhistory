distinct()
microreact_coords <- bind_rows(microreact_coords_distinct,
microreact_coords_dup) %>%
arrange(year) %>%
print()
microreact_coords_distinct <- microreact %>%
filter(year <=2016, country == "United States") %>%
select(latitude, longitude, year) %>%
arrange(year) %>%
distinct() %>%
mutate(count = 1)
microreact_coords_dup <- microreact %>%
filter(year <=2016, country == "United States") %>%
select(latitude, longitude, year) %>%
arrange(year) %>%
get_dupes %>%
distinct()
microreact_coords <- bind_rows(microreact_coords_distinct,
microreact_coords_dup) %>%
arrange(year) %>%
print()
microreact_coords_distinct <- microreact %>%
filter(year <=2016, country == "United States") %>%
select(latitude, longitude, year) %>%
arrange(year) %>%
distinct() %>%
mutate(count = 1)
microreact_coords_dup <- microreact %>%
filter(year <=2016, country == "United States") %>%
select(latitude, longitude, year) %>%
arrange(year) %>%
get_dupes %>%
distinct() %>%
mutate(count=dupe_count)
microreact_coords <- bind_rows(microreact_coords_distinct,
microreact_coords_dup) %>%
arrange(year) %>%
print()
us_comp <- usa_sf()
ggplot() +
geom_sf(data = us_comp) +
geom_point(data=microreact_coords, aes(longitude, latitude, size=count), color="blue")+
theme_linedraw()+
facet_wrap(~year, ncol = 2)+
labs(title = "USA State Boundaries")
us_comp <- usa_sf()
ggplot() +
geom_sf(data = us_comp) +
geom_point(data=microreact_coords, aes(longitude, latitude, size=count), color="blue")+
theme_linedraw()+
facet_wrap(~year, ncol = 2)+
labs(title = "US Cases 2012-2016")
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Case Counts per Year by Country"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("country",
" Select Country",
choices=unique(case_counts$country)),
selected = "Australia"),
radioButtons("x",
"Select Fill Variable",
choices=c("amr_gene", "drug_resistance"), selected = "drug_resistance"),
), # close the first box
box(title = "Case Count", width = 7,
plotOutput("plot", width = "400px", height = "300px")
) # close the second box
) # close the row
) # close the dashboard body
# close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
case_counts %>%
filter(country==input$country) %>%
ggplot(aes_string(x = "year", y="n", fill=input$x)) +
geom_col() +
theme_classic()+
scale_fill_manual(values = my_palette)+
labs(x="Year")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Case Counts per Year by Country"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("country",
" Select Country",
choices=unique(case_counts$country)),
selected = "United States"),
radioButtons("x",
"Select Fill Variable",
choices=c("amr_gene", "drug_resistance"), selected = "drug_resistance"),
), # close the first box
box(title = "Case Count", width = 7,
plotOutput("plot", width = "400px", height = "300px")
) # close the second box
) # close the row
) # close the dashboard body
# close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
case_counts %>%
filter(country==input$country) %>%
ggplot(aes_string(x = "year", y="n", fill=input$x)) +
geom_col() +
theme_classic()+
scale_fill_manual(values = my_palette)+
labs(x="Year")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Case Counts per Year by Country"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("country",
" Select Country",
choices=unique(case_counts$country)),
selected = "United States"),
radioButtons("x",
"Select Fill Variable",
choices=c("amr_gene", "drug_resistance"), selected = "drug_resistance"),
), # close the first box
box(title = "Case Count", width = 7,
plotOutput("plot", width = "400px", height = "300px")
) # close the second box
) # close the row
) # close the dashboard body
# close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
case_counts %>%
filter(country==input$country) %>%
ggplot(aes_string(x = "year", y="n", fill=input$x)) +
geom_col() +
theme_classic()+
scale_fill_manual(values = my_palette)+
labs(x="Year")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Case Counts per Year by Country"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("country",
" Select Country",
choices=unique(case_counts$country)),
selected = "United States"),
radioButtons("x",
"Select Fill Variable",
choices=c("amr_gene", "drug_resistance"), selected = "drug_resistance"),
), # close the first box
box(title = "Case Count", width = 7,
plotOutput("plot", width = "400px", height = "300px")
) # close the second box
) # close the row
) # close the dashboard body
# close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
case_counts %>%
filter(country==input$country) %>%
ggplot(aes_string(x = "year", y="n", fill=input$x)) +
geom_col() +
theme_classic()+
scale_fill_manual(values = my_palette)+
labs(x="Year")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Case Counts per Year by Country"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("country",
" Select Country",
choices=unique(case_counts$country)),
selected = "United States"),
radioButtons("x",
"Select Fill Variable",
choices=c("amr_gene", "drug_resistance"), selected = "drug_resistance"),
), # close the first box
box(title = "Case Count", width = 7,
plotOutput("plot", width = "400px", height = "300px")
) # close the second box
) # close the row
) # close the dashboard body
# close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
case_counts %>%
filter(country==input$country) %>%
ggplot(aes_string(x = "year", y="n", fill=input$x)) +
geom_col() +
theme_classic()+
scale_fill_manual(values = my_palette)+
labs(x="Year",
title= input$country
)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Case Counts per Year by Country"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("country",
" Select Country",
choices=unique(case_counts$country)),
selected = "United States"),
radioButtons("x",
"Select Fill Variable",
choices=c("amr_gene", "drug_resistance"), selected = "drug_resistance"),
), # close the first box
box(title = "Case Count", width = 7,
plotOutput("plot", width = "400px", height = "300px")
) # close the second box
) # close the row
) # close the dashboard body
# close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
case_counts %>%
filter(country==input$country) %>%
ggplot(aes_string(x = "year", y="n", fill=input$x)) +
geom_col() +
theme_classic()+
scale_fill_manual(values = my_palette)+
labs(x="Year")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
microreact_drug_resistance %>%
count(year, drug_resistance) %>%
print()
microreact_drug_resistance %>%
count(year, drug_resistance) %>%
ggplot(aes(x=year, y=n, fill=drug_resistance))+
geom_line()
microreact_drug_resistance %>%
count(year, drug_resistance) %>%
ggplot(aes(x=year, y=n, color=drug_resistance))+
geom_line()
microreact_drug_resistance %>%
filter(drug_resistance!="NA") %>%
count(year, drug_resistance) %>%
ggplot(aes(x=year, y=n, color=drug_resistance))+
geom_line()
microreact_drug_resistance %>%
filter(drug_resistance!="NA") %>%
count(year, drug_resistance) %>%
ggplot(aes(x=year, y=n, color=drug_resistance))+
geom_line()+
theme_classic()+
scale_fill_viridis_b()
microreact_drug_resistance %>%
filter(drug_resistance!="NA") %>%
count(year, drug_resistance) %>%
ggplot(aes(x=year, y=n, color=drug_resistance))+
geom_line()+
theme_classic()+
scale_fill_manual(values=my_palette)
microreact_drug_resistance %>%
filter(drug_resistance!="NA") %>%
count(year, drug_resistance) %>%
ggplot(aes(x=year, y=n, color=drug_resistance))+
geom_line()+
theme_classic()+
scale_color_manual(values=my_palette)
microreact_drug_resistance %>%
filter(drug_resistance!="NA") %>%
count(year, drug_resistance) %>%
ggplot(aes(x=year, y=n, color=drug_resistance))+
geom_line(size=1.25)+
theme_classic()+
scale_color_manual(values=my_palette)
microreact_drug_resistance %>%
filter(drug_resistance!="NA") %>%
count(year, drug_resistance) %>%
ggplot(aes(x=year, y=n, color=drug_resistance))+
geom_line(size=1.25)+
theme_classic()+
scale_color_viridis()
microreact_drug_resistance %>%
filter(drug_resistance!="NA") %>%
count(year, drug_resistance) %>%
ggplot(aes(x=year, y=n, color=drug_resistance))+
geom_line(size=1.25)+
theme_classic()+
scale_color_viridis_b()
microreact_drug_resistance %>%
filter(drug_resistance!="NA") %>%
count(year, drug_resistance) %>%
ggplot(aes(x=year, y=n, color=drug_resistance))+
geom_line(size=1.25)+
theme_classic()+
scale_color_viridis_c()
microreact_drug_resistance %>%
filter(drug_resistance!="NA") %>%
count(year, drug_resistance) %>%
ggplot(aes(x=year, y=n, color=drug_resistance))+
geom_line(size=1.25)+
theme_classic()+
scale_color_viridis_d()
View(microreact_drug_resistance)
microreact_drug_resistance %>%
filter(drug_resistance!="NA"|drug_resistance=="NR") %>%
count(year, drug_resistance) %>%
ggplot(aes(x=year, y=n, color=drug_resistance))+
geom_line(size=1.25)+
theme_classic()+
scale_color_viridis_d()
microreact_drug_resistance %>%
filter(drug_resistance!="NA"|drug_resistance=="NR") %>%
count(year, drug_resistance) %>%
ggplot(aes(x=year, y=n, color=drug_resistance))+
geom_line(size=1.25)+
theme_classic()+
scale_color_viridis_d()
microreact_drug_resistance %>%
filter(drug_resistance!="NA", drug_resistance=="NR") %>%
count(year, drug_resistance) %>%
ggplot(aes(x=year, y=n, color=drug_resistance))+
geom_line(size=1.25)+
theme_classic()+
scale_color_viridis_d()
microreact_drug_resistance %>%
filter(drug_resistance!="NA"| drug_resistance!="NR") %>%
count(year, drug_resistance) %>%
ggplot(aes(x=year, y=n, color=drug_resistance))+
geom_line(size=1.25)+
theme_classic()+
scale_color_viridis_d()
microreact_drug_resistance %>%
filter(drug_resistance!="NA", drug_resistance!="NR") %>%
count(year, drug_resistance) %>%
ggplot(aes(x=year, y=n, color=drug_resistance))+
geom_line(size=1.25)+
theme_classic()+
scale_color_viridis_d()
microreact_drug_resistance %>%
filter(drug_resistance!="NA", drug_resistance!="NR") %>%
count(year, drug_resistance) %>%
ggplot(aes(x=year, y=n, color=drug_resistance))+
geom_line(size=1.25)+
theme_classic()+
scale_color_viridis_d()+
labs(title="Antifungal Drug Resistant Strain Counts Over Time",
x="Year",
y="Count (global)",
legend="Drug Resistance")
microreact_drug_resistance %>%
filter(drug_resistance!="NA", drug_resistance!="NR") %>%
count(year, drug_resistance) %>%
ggplot(aes(x=year, y=n, color=drug_resistance))+
geom_line(size=1.25)+
theme_classic()+
scale_color_viridis_d()+
labs(title="Antifungal Drug Resistant Strain Counts Over Time",
x="Year",
y="Count (Global)")
microreact_drug_resistance %>%
filter(drug_resistance!="NA", drug_resistance!="NR") %>%
count(year, drug_resistance) %>%
ggplot(aes(x=year, y=n, color=drug_resistance))+
geom_line(size=1.25)+
theme_classic()+
scale_color_viridis_d()+
labs(title="Antifungal Drug Resistant Strain Counts by Year",
x="Year",
y="Count (Global)")
microreact_drug_resistance %>%
group_by(year) %>%
summarize(total=n_distinct(id))
micro_totals <- microreact_drug_resistance %>%
group_by(year) %>%
summarize(total=n_distinct(id))
micro_totals <- microreact_drug_resistance %>%
group_by(year, drug_resistance) %>%
summarize(total=n_distinct(id))
micro_totals <- microreact_drug_resistance %>%
group_by(year, drug_resistance) %>%
summarize(total=n_distinct(id)) %>%
print()
micro_totals <- microreact_drug_resistance %>%
group_by(year) %>%
summarize(total=n_distinct(id)) %>%
print()
micro_drug_totals <- microreact_drug_resistance %>%
group_by(year, drug_resistance)
View(micro_drug_totals)
micro_case_totals <- microreact_drug_resistance %>%
group_by(year) %>%
summarize(total_cases=n_distinct(id)) %>%
print()
micro_drug_totals <- microreact_drug_resistance %>%
group_by(year, drug_resistance) %>%
summarize(total_drug=n_distinct(id))
micro_drug_totals <- microreact_drug_resistance %>%
group_by(year, drug_resistance) %>%
summarize(total_drug=n_distinct(id)) %>%
print()
join_drug_totals <- full_join(micro_drug_totals, micro_case_totals, by="year")
View(join_drug_totals)
percent_drug_resistant <- join_drug_totals %>%
mutate(percent_of_total_cases=(total_drug/total_cases)*100)
View(percent_drug_resistant)
percent_drug_resistant %>%
filter(drug_resistance!="NA") %>%
ggplot(aes(x=year, y=percent_of_total_cases, color=drug_resistance))+
geom_line(size=1.25)+
theme_classic()+
scale_color_viridis_d()+
labs(title="Antifungal Drug Resistant Strain Percentage of Total Cases by Year",
x="Year",
y="Percent of Total Cases")
percent_drug_resistant %>%
filter(drug_resistance!="NA") %>%
ggplot(aes(x=year, y=percent_of_total_cases, color=drug_resistance))+
geom_line(size=1.25)+
theme_classic()+
scale_color_viridis_d()+
labs(title="Antifungal Drug Resistant Strain Percentage of Total Cases by Year",
x="Year",
y="Percent of Total Cases")+
facet_wrap(~drug_resistance, ncol=5)
percent_drug_resistant %>%
filter(drug_resistance!="NA") %>%
ggplot(aes(x=year, y=percent_of_total_cases, color=drug_resistance))+
geom_line(size=1.25)+
theme_classic()+
scale_color_viridis_d()+
labs(title="Antifungal Drug Resistant Strain Percentage of Total Cases by Year",
x="Year",
y="Percent of Total Cases")+
facet_grid(~drug_resistance, ncol=5)
percent_drug_resistant %>%
filter(drug_resistance!="NA") %>%
ggplot(aes(x=year, y=percent_of_total_cases, color=drug_resistance))+
geom_line(size=1.25)+
theme_classic()+
scale_color_viridis_d()+
labs(title="Antifungal Drug Resistant Strain Percentage of Total Cases by Year",
x="Year",
y="Percent of Total Cases")+
facet_grid(~drug_resistance)
percent_drug_resistant %>%
filter(drug_resistance!="NA") %>%
ggplot(aes(x=year, y=percent_of_total_cases, color=drug_resistance))+
geom_line(size=1.25)+
theme_classic()+
scale_color_viridis_d()+
labs(title="Antifungal Drug Resistant Strain Percentage of Total Cases by Year",
x="Year",
y="Percent of Total Cases")+
facet_wrap(~drug_resistance, ncol=2)
percent_drug_resistant %>%
filter(drug_resistance!="NA"|drug_resistance!= "AMB") %>%
ggplot(aes(x=year, y=percent_of_total_cases, color=drug_resistance))+
geom_line(size=1.25)+
theme_classic()+
scale_color_viridis_d()+
labs(title="Antifungal Drug Resistant Strain Percentage of Total Cases by Year",
x="Year",
y="Percent of Total Cases")+
facet_wrap(~drug_resistance, ncol=2)
percent_drug_resistant %>%
filter(drug_resistance!="NA", drug_resistance!= "AMB") %>%
ggplot(aes(x=year, y=percent_of_total_cases, color=drug_resistance))+
geom_line(size=1.25)+
theme_classic()+
scale_color_viridis_d()+
labs(title="Antifungal Drug Resistant Strain Percentage of Total Cases by Year",
x="Year",
y="Percent of Total Cases")+
facet_wrap(~drug_resistance, ncol=2)
microreact_drug_resistance %>%
filter(drug_resistance!="NA", drug_resistance!= "AMB") %>%
count(year, drug_resistance) %>%
ggplot(aes(x=year, y=n, color=drug_resistance))+
geom_line(size=1.25)+
theme_classic()+
scale_color_viridis_d()+
labs(title="Antifungal Drug Resistant Strain Counts by Year",
x="Year",
y="Count (Global)")
